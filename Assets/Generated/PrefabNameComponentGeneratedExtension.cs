//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public partial class Entity {

        public PrefabNameComponent prefabName { get { return (PrefabNameComponent)GetComponent(CoreComponentIds.PrefabName); } }
        public bool hasPrefabName { get { return HasComponent(CoreComponentIds.PrefabName); } }

        public Entity AddPrefabName(string newName) {
            var component = CreateComponent<PrefabNameComponent>(CoreComponentIds.PrefabName);
            component.Name = newName;
            return AddComponent(CoreComponentIds.PrefabName, component);
        }

        public Entity ReplacePrefabName(string newName) {
            var component = CreateComponent<PrefabNameComponent>(CoreComponentIds.PrefabName);
            component.Name = newName;
            ReplaceComponent(CoreComponentIds.PrefabName, component);
            return this;
        }

        public Entity RemovePrefabName() {
            return RemoveComponent(CoreComponentIds.PrefabName);
        }
    }
}

    public partial class CoreMatcher {

        static IMatcher _matcherPrefabName;

        public static IMatcher PrefabName {
            get {
                if(_matcherPrefabName == null) {
                    var matcher = (Matcher)Matcher.AllOf(CoreComponentIds.PrefabName);
                    matcher.componentNames = CoreComponentIds.componentNames;
                    _matcherPrefabName = matcher;
                }

                return _matcherPrefabName;
            }
        }
    }
